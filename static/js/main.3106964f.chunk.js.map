{"version":3,"sources":["logo.svg","modules/static/header.jsx","modules/api/api.js","modules/body/itemModal.jsx","modules/body/items.jsx","modules/body/flex-scroller.jsx","modules/body/body.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","class","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","FetchData","a","axios","get","result","data","results","FetchGeneres","generes","genres","FetchMoviesByGeneres","finalUrl","moviesByGeneres","SearchMovie","query","movies","console","log","ItemModal","props","handleClose","movie","show","Modal","onHide","Body","className","src","poster_path","alt","title","vote_average","release_date","overview","Footer","Button","variant","onClick","e","Item","useState","setShow","handleShow","index","key","onMouseMove","target","style","cursor","FlexScroller","data-panel","data-group","map","classNameName","setMovies","setGeneres","search","setSearch","useEffect","then","event","fetchedMoviesByGenere","name","onSubmit","preventDefault","onChange","value","HandleOnChange","placeholder","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3106964f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\n\r\n\r\nexport default function Header() {\r\n  return (\r\n\r\n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n    <a class=\"navbar-brand\" href=\"#\">Movies</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      \r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"#\">Features</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"#\">Pricing</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"#\">About</a>\r\n        </li>\r\n      </ul>\r\n     \r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n","import axios from \"axios\";\r\n\r\n const API =\r\n  \" https://api.themoviedb.org/3/discover/movie?api_key=45bf6592c14a965b33549f4cc7e6c664&certification_country=US&certification.lte=G&sort_by=popularity.desc\";\r\n \r\n const ApiGeneres=\"https://api.themoviedb.org/3/genre/movie/list?api_key=45bf6592c14a965b33549f4cc7e6c664\";\r\n const ApiFindbyGeneres=\"https://api.themoviedb.org/3/discover/movie?api_key=45bf6592c14a965b33549f4cc7e6c664&sort_by=popularity.asc&include_adult=false &with_genres=\"\r\nconst ApiSearch=\"https://api.themoviedb.org/3/search/movie?api_key=45bf6592c14a965b33549f4cc7e6c664&query=\";\r\n\r\nexport const FetchData = async () => {\r\n  const result = await axios.get(API);\r\n  return result.data.results;\r\n};\r\n\r\n\r\nexport const FetchGeneres = async () => {\r\n    const generes = await axios.get(ApiGeneres);\r\n  \r\n    return generes.data.genres;\r\n  };\r\n\r\n\r\n  \r\nexport const FetchMoviesByGeneres = async (id) => {\r\n   \r\n    const finalUrl = ApiFindbyGeneres+id;\r\n    const moviesByGeneres = await axios.get(finalUrl);\r\n    return(moviesByGeneres.data.results);\r\n   \r\n  };\r\n\r\n  export const SearchMovie = async (query) => {\r\n   \r\n    const finalUrl = ApiSearch+query;\r\n    const movies = await axios.get(finalUrl);\r\n    console.log(movies);\r\n    return(movies.data.results);\r\n   \r\n  };\r\n\r\n\r\n\r\n  \r\n","import React, { useState } from \"react\";\r\n\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nexport default function ItemModal(props) {\r\n  const { handleClose, movie, show } = props;\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Body>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <img\r\n                src={\r\n                  \"https://image.tmdb.org/t/p/w220_and_h330_face/\" +\r\n                  movie.poster_path\r\n                }\r\n                class=\"align-self-center mr-3\"\r\n                alt=\"...\"\r\n              ></img>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              {movie.title}\r\n              \r\n                <p>\r\n                  Rating:\r\n                  <span class=\"ml-2 badge badge-dark \">{movie.vote_average}</span>\r\n                </p>\r\n             \r\n            \r\n                <p>\r\n                  Release Date:  \r\n                  <span class=\"badge badge-dark ml-2 mb-1 \">\r\n                    {movie.release_date}\r\n                  </span>\r\n                </p>\r\n            \r\n              <p> {movie.overview}</p>\r\n\r\n              <Modal.Footer>\r\n                <Button variant=\"closeButton\" onClick={(e) => handleClose(e)}>\r\n                  Close\r\n                </Button>\r\n              </Modal.Footer>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, Fragment } from \"react\";\r\nimport ItemModal from \"./itemModal\";\r\n\r\n\r\n\r\nexport default function Item(props) {\r\n  const [isOpened, setIsOpened] = useState(false);\r\n\r\n  const [show, setShow] = useState(false);\r\n    \r\n  const HandleMove=(e)=>{\r\n    e.target.style.cursor = 'pointer';\r\n  };\r\n  const handleClose = (e) => setShow(false);\r\n  const handleShow = (e) => setShow(true);\r\n\r\n  const toggle = (e) => {\r\n    setIsOpened((wasOpened) => !wasOpened);\r\n  };\r\n\r\n  const { movie, index } = props;\r\n\r\n  return (\r\n  <Fragment>\r\n    \r\n  \r\n      \r\n      \r\n      <ItemModal handleClose={handleClose} movie={movie} handleShow={handleShow} show={show}/>\r\n   \r\n   <div className=\"movie-item  col-sm-2 col-12\" key={index}>\r\n      <div className=\"card\"  onMouseMove={HandleMove} onClick={(e) => handleShow(e)}>\r\n        <img\r\n          src={\r\n            \"https://image.tmdb.org/t/p/w220_and_h330_face/\" + movie.poster_path\r\n          }\r\n        />\r\n        <h5 className=\" my-title bold mt-3\">{movie.title}</h5>\r\n        \r\n\r\n      \r\n      </div>\r\n    </div>\r\n    </Fragment>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function FlexScroller(props)\r\n{  const {movies}=props;\r\n    return (\r\n        <section className=\"inner_content no_pad\">\r\n        <div className=\"column_wrapper\">\r\n          <div className=\"content_wrapper wrap no_bottom_pad\">\r\n            <div className=\"column\">\r\n            <div className=\"column_header\">\r\n          <h2>What's Popular</h2>\r\n\r\n          <div className=\"selector_wrap\">\r\n            <div className=\"selector\">\r\n              <div className=\"anchor selected\">\r\n                <h3><a href=\"#\" className=\"no_click\" data-panel=\"popular_scroller\" data-group=\"streaming\">Streaming <span className=\"glyphicons_v2 chevron-down\"></span></a></h3>\r\n                <div className=\"background\" ></div>\r\n              </div>\r\n\r\n              <div className=\"anchor\">\r\n                <h3><a href=\"#\" className=\"no_click\" data-panel=\"popular_scroller\" data-group=\"on-tv\">On TV <span className=\"glyphicons_v2 chevron-down\"></span></a></h3>\r\n                <div className=\"background hide\" ></div>\r\n              </div>\r\n\r\n              <div className=\"anchor \">\r\n                <h3><a href=\"#\" className=\"no_click\" data-panel=\"popular_scroller\" data-group=\"for-rent\">For Rent <span className=\"glyphicons_v2 chevron-down\"></span></a></h3>\r\n              </div>\r\n\r\n              <div className=\"anchor \">\r\n                <h3><a href=\"#\" className=\"no_click\" data-panel=\"popular_scroller\" data-group=\"in-theatres\">In Theaters <span className=\"glyphicons_v2 chevron-down\"></span></a></h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n              <div\r\n                id=\"free_scroller\"\r\n                className=\"media discover scroller_wrap should_fade is_fading\"\r\n              >\r\n                <div className=\"column_content flex scroller\">\r\n                  {movies.map((movie, index) => (\r\n                    <div className=\"card style_1 \">\r\n                      <div className=\"image\">\r\n                        <div className=\"wrapper\">\r\n                          <img\r\n                            src={\r\n                              \"https://image.tmdb.org/t/p/w220_and_h330_face/\" +\r\n                              movie.poster_path\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"content\">\r\n                        <div className=\"consensus tight\">\r\n                          \r\n                          <div className=\"outer_ring\">\r\n                            <div className=\"user_score_chart\">\r\n                              <div className=\"percent\">\r\n                                <span className=\"icon icon-rNR\"></span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div><span classNameName=\"span-title\">{movie.title}</span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    )\r\n}","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport {\r\n  FetchData,\r\n  FetchGeneres,\r\n  FetchMoviesByGeneres,\r\n  SearchMovie,\r\n} from \"../api/api\";\r\nimport Menu from \"../optionMenu/optionMenu\";\r\nimport \"./body.css\";\r\n\r\nimport \"./flex-scroller.css\";\r\n//import \"./../discover.css\";\r\n//import \"./../media.css\";\r\n//import \"./../index1.css\";\r\n//import \"./../copy.css\";\r\n\r\nimport Item from \"./items\";\r\nimport FlexScroller from \"./flex-scroller\";\r\n\r\nexport default function Body() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [generes, setGeneres] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    FetchData().then((result) => setMovies(result));\r\n    FetchGeneres().then((generes) => setGeneres(generes));\r\n    console.log(\"insdie useEfeect\", movies);\r\n    console.log(\"insdie useEfeect Generes\", generes);\r\n  }, []);\r\n\r\n  const HandleOnClick = (e) => {\r\n    console.log(e.target.id);\r\n    FetchMoviesByGeneres(e.target.id).then((fetchedMoviesByGenere) =>\r\n      setMovies(fetchedMoviesByGenere)\r\n    );\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    SearchMovie(search).then((movies) => setMovies(movies));\r\n  };\r\n  const HandleOnChange = (e) => {\r\n    setSearch(e.target.value);\r\n    console.log(search);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <section>\r\n        <div className=\"gender-wrap \">\r\n          <ul class=\"nav\">\r\n            {generes.map((genres) => (\r\n              <li class=\"nav-item mr-2 mb-2\" key={genres.id}>\r\n                <button\r\n                  className=\"btn badge\"\r\n                  id={genres.id}\r\n                  onClick={(event) => HandleOnClick(event)}\r\n                >\r\n                  {genres.name}\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </section>\r\n\r\n      <section>\r\n        <div class=\"row mx-auto\">\r\n          <form class=\"form-inline mt-3  mx-auto\" onSubmit={(e) => onSubmit(e)}>\r\n            <input\r\n              class=\"form-control mr-sm-2\"\r\n              type=\"search\"\r\n              onChange={(e) => HandleOnChange(e)}\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            ></input>\r\n            <button class=\"btn btn-outline-info my-2 my-sm-0\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </section>\r\n\r\n      <FlexScroller movies={movies} />\r\n\r\n      <div class=\"row mt-5\">\r\n        {movies.map((movie, index) =>\r\n          movie.poster_path != null ? (\r\n            <Item movie={movie} index={index} />\r\n          ) : (\r\n            <div></div>\r\n          )\r\n        )}\r\n      </div>\r\n\r\n      \r\n    \r\n    </Fragment>\r\n  );\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from \"./modules/static/header\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport Body from  \"../src/modules/body/body\"\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <div className=\"container\">\n      \n      <Body/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}